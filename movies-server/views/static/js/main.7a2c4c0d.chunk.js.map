{"version":3,"sources":["movies/Components/Bar.js","movies/API/moviesApi.js","movies/Components/ModalMovies.js","movies/Images/popcorn.png","movies/Components/Movies.js","movies/Components/Footer.js","movies/index.js","reportWebVitals.js","index.js"],"names":["Bar","className","URL","getMovies","title","a","fetch","response","json","data","getMovie","imdbID","ModalMovies","props","Modal","show","onHide","handleClose","Header","movieDetails","Title","Body","src","Poster","Actors","Genre","Language","Plot","Footer","Runtime","Year","imdbVotes","Movies","useState","movies","setMovies","searchMovie","setSearchMovie","errorMessage","setErrorMessage","spinner","setSpinner","setShow","setMovieDetails","handleShow","checkMoviesResponse","message","movie","setTimeout","useEffect","serach","clearTimeout","Container","type","placeholder","onChange","e","target","value","icon","faSearch","Spinner","animation","size","popcorn","Row","map","index","Col","xs","md","lg","Card","onClick","getDetailsMovie","Img","variant","Text","Type","faCopyright","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a2c4c0d.chunk.js","sourcesContent":["\r\nfunction Bar(){\r\n    return <>\r\n        <div className=\"nav-bar-movies\">\r\n            <h3 className=\"my-auto\">MOVIES</h3>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default Bar","const URL = \"https://git.heroku.com/omdb-movies-web.git/api\"\r\n\r\n\r\nasync function getMovies(title){\r\n    let response = await fetch(`${URL}/movies?title=${title}`)\r\n    let data = await response.json()\r\n    return data\r\n}\r\n\r\nasync function getMovie(imdbID){\r\n    let response = await fetch(`${URL}/movies/details?id=${imdbID}`)\r\n    let data = await response.json()\r\n    return data\r\n}\r\n\r\n\r\nexport {getMovies, getMovie}","import {Modal} from \"react-bootstrap\"\r\n\r\nfunction ModalMovies(props){\r\n    return <>\r\n        <Modal show={props.show} onHide={props.handleClose}>\r\n            <Modal.Header className=\"modal-header\">\r\n                <h3 className=\"text-center\">{props.movieDetails.Title}</h3>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body className=\"modal-body\">\r\n            <div className=\"container-img\">\r\n                <img src={props.movieDetails.Poster}/>\r\n            </div>\r\n            <div className=\"modal-body-text\">\r\n                <h6>Actors:</h6>\r\n                <p>{props.movieDetails.Actors}</p>\r\n                <h6>Genre:</h6>\r\n                <p>{props.movieDetails.Genre}</p>\r\n                <h6>Language:</h6>\r\n                <p>{props.movieDetails.Language}</p>\r\n                <h6>Summary:</h6>\r\n                <p>{props.movieDetails.Plot}</p>\r\n            </div>\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer className=\"modal-footer\">\r\n                <p>Time: {props.movieDetails.Runtime}</p>\r\n                <p>Year: {props.movieDetails.Year}</p>\r\n                <p>Votes: {props.movieDetails.imdbVotes}</p>\r\n            </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n}\r\n\r\n\r\nexport default ModalMovies","export default __webpack_public_path__ + \"static/media/popcorn.ea76eb48.png\";","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\nimport {Container, Row, Card, Col, Spinner} from \"react-bootstrap\"\r\nimport {useState, useEffect} from \"react\"\r\nimport {getMovies, getMovie} from \"../API/moviesApi\"\r\nimport ModalMovies from \"./ModalMovies\"\r\nimport popcorn from \"../Images/popcorn.png\"\r\n\r\n\r\nfunction Movies(){\r\n\r\n    const [movies, setMovies] = useState([])\r\n    const [searchMovie, setSearchMovie] = useState([])\r\n    const [errorMessage, setErrorMessage] = useState(\"\")\r\n    const [spinner, setSpinner] = useState(true)\r\n\r\n    const [show, setShow] = useState(false)\r\n    const [movieDetails, setMovieDetails] = useState({})\r\n\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true)\r\n\r\n\r\n    useEffect(()=>{\r\n        const serach = setTimeout(async()=>{\r\n            setErrorMessage(\"\")\r\n            setSpinner(true)\r\n            const {movies, message} = await getMovies(searchMovie)\r\n            checkMoviesResponse(movies, message)\r\n        }, 1000)\r\n\r\n        return () => {\r\n            clearTimeout(serach)\r\n        }\r\n    }, [searchMovie])\r\n\r\n    function checkMoviesResponse(movies, message){\r\n        setSpinner(false)\r\n        if(message){\r\n            setMovies([])\r\n            setErrorMessage(message)\r\n        } else {\r\n            setMovies(movies)\r\n        }\r\n    }\r\n\r\n    async function getDetailsMovie(imdbID){\r\n        const {movie, message} = await getMovie(imdbID)\r\n        if(message){\r\n            setErrorMessage(message)\r\n            setTimeout(()=>{\r\n                setErrorMessage(\"\")\r\n            }, 2000)\r\n\r\n        } else {\r\n            setMovieDetails(movie)\r\n            handleShow()\r\n        }\r\n    }\r\n\r\n\r\n    return <>\r\n        <Container className=\"mt-5\">\r\n\r\n            <ModalMovies handleClose={handleClose} show={show} movieDetails={movieDetails}/>\r\n\r\n            <div className=\"serach-container\">\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <div className=\"search-movies d-flex col-10 col-lg-5 col-md-6\">\r\n                        <input \r\n                        className=\"search-input\"\r\n                        type='text' \r\n                        placeholder=\"Search Movies ...\"\r\n                        onChange={(e)=>setSearchMovie(e.target.value)}></input>\r\n                        <FontAwesomeIcon icon={faSearch} className=\"icon-search\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                {!spinner&&errorMessage&&<div className=\"d-flex justify-content-center\">\r\n                    <p>{errorMessage}</p>\r\n                </div>}\r\n            </div>\r\n\r\n            {spinner&&<div className=\"loader d-flex justify-content-center align-items-center\">\r\n                <h4 className=\"text-center mx-3\">Loading</h4>\r\n                <Spinner animation=\"grow\" size=\"sm\"/>\r\n                <img className=\"popcorn\" src={popcorn}/>\r\n            </div>}\r\n\r\n            {!spinner&&<Row>\r\n                {movies.map((movie, index)=>{\r\n                return <Col xs={12} md={6} lg={4} key={index}>\r\n                        <Card className=\"card-movie mb-5 mx-auto\" onClick={()=>getDetailsMovie(movie.imdbID)}>\r\n                            <div>\r\n                                <Card.Img variant=\"top\" className=\"card-img\" src={movie.Poster}/>\r\n                            </div>\r\n\r\n                            <Card.Body className=\"card-body\">\r\n                                <h5 className=\"card-title\">{movie.Title}</h5>\r\n                                <Card.Text className=\"card-text\">\r\n                                    <span>{movie.Year}</span>\r\n                                    <span>{movie.Type}</span>\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>})}\r\n            </Row>}\r\n\r\n        </Container>\r\n    </>\r\n}\r\n\r\nexport default Movies","import {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faCopyright} from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nfunction Footer(){\r\n    return <>\r\n        <div className=\"footer\">\r\n            <FontAwesomeIcon icon={faCopyright} className=\"icon-footer\" size=\"1x\"/>\r\n            <h6>Neria Sivan</h6>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default Footer\r\n","import {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\nimport Bar from \"./Components/Bar\";\r\nimport Movies from \"./Components/Movies\";\r\nimport Footer from \"./Components/Footer\"\r\n\r\nfunction App(){\r\n    return <>\r\n    <Bar/>\r\n    <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Movies/>\r\n          </Route>\r\n        </Switch>\r\n    </Router>\r\n    <Footer/>\r\n    </>\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"bootstrap/dist/css/bootstrap.min.css\"\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './movies/CSS/index.css';\nimport './movies/CSS/search.css'\nimport './movies/CSS/modal.css';\nimport './movies/CSS/card.css';\nimport App from './movies/index';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}